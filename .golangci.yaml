linters:
  disable-all: true
  enable:
    # govet: Vet examines Go source code and reports suspicious constructs, such as Printf calls whose arguments do not align with the format string.
    - govet
    # ineffassign: Detects when assignments to existing variables are not used.
    - ineffassign
    # staticcheck: It's a set of rules from staticcheck. It's not the same thing as the staticcheck binary. The author of staticcheck doesn't support or approve the use of staticcheck as a library inside golangci-lint.
    - staticcheck
    # typecheck: is like the front-end of a Go compiler, parses and type-checks Go code, it manages compilation errors.
    - typecheck
    # revive: Fast, configurable, extensible, flexible, and beautiful linter for Go. Drop-in replacement of golint.
    - revive
    # unused: Checks Go code for unused constants, variables, functions and types.
    - unused
    # gocritic:
    # Provides diagnostics that check for bugs, performance and style issues.
    # Extensible without recompilation through dynamic rules.
    # Dynamic rules are written declaratively with AST patterns, filters, report message and optional suggestion.
    - gocritic
    # gosimple: Linter for Go source code that specializes in simplifying code.
    - gosimple
    - copyloopvar
    # nilerr: Finds the code that returns nil even if it checks that the error is not nil.
    - nilerr
issues:
  new: true
  exclude-use-default: false
  fix: false
